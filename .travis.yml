language: android
sudo: required
dist: trusty
jdk: oraclejdk8

env:
  global:
    - ADB_INSTALL_TIMEOUT=8
    - ABI=armeabi-v7a
    - EMU_FLAVOR=default
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    - ANDROID_HOME=/usr/local/android-sdk
    - TOOLS=${ANDROID_HOME}/tools
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
  matrix:
    - API=28 ABI=x86_64

android:
  components:
    - tools
    - platform-tools
    - tools
    - extra-android-m2repository
  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'

before_install:
  - touch $HOME/.android/repositories.cfg
  - yes | sdkmanager "platforms;android-28"
  - yes | sdkmanager "build-tools;28.0.3"
  - git remote rm origin
  - git remote add origin https://github.com/suhocki/starlord.git
  - git fetch origin
  - openssl aes-256-cbc -K $encrypted_d9066dcd8080_key -iv $encrypted_d9066dcd8080_iv
    -in keys/secrets.tar.enc -out keys/secrets.tar -d
  - tar xvf keys/secrets.tar -C keys
  - yes | sdkmanager "platforms;android-28"
  - sudo apt-get install jq

install:
  - echo 'count=0' > /home/travis/.android/repositories.cfg # Avoid harmless sdkmanager warning
  - echo y | sdkmanager "platform-tools" >/dev/null
  - echo y | sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - echo y | sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
  - echo y | sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
  - echo y | sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties
  - echo y | sdkmanager --channel=4 "emulator" # Experiment with canary, specifying 28.0.3 (prior version) did not work
  - echo y | sdkmanager "extras;android;m2repository" >/dev/null
  - echo y | sdkmanager "system-images;android-$API;$EMU_FLAVOR;$ABI" #>/dev/null # install our emulator
  - echo no | avdmanager create avd --force -n test -k "system-images;android-$API;$EMU_FLAVOR;$ABI" -c 10M
  - emulator -verbose -avd test -no-accel -no-snapshot -no-window $AUDIO -camera-back none -camera-front none -selinux permissive -qemu -m 2048 &
  - android-wait-for-emulator
  - adb shell settings put global window_animation_scale 0 &
  - adb shell settings put global transition_animation_scale 0 &
  - adb shell settings put global animator_duration_scale 0 &
  - adb shell input keyevent 82 &

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache

before_script:
  - sudo chmod 755 -R scripts
  - export COMMITTER_EMAIL="$(git log -1 $TRAVIS_COMMIT --pretty="%cE")"
  - export AUTHOR_NAME="$(git log -1 $TRAVIS_COMMIT --pretty="%aN")"

script:
  - ./gradlew test check detekt assemble connectedDebugAndroidTest jacocoTestReport

branches:
  only:
    - master
    - develop

before_deploy:
  - git tag $(scripts/versionizer/versionizer.sh name)
  - ./scripts/get_whats_new.sh
  - ./gradlew publish
  - ./scripts/telegram_notify_on_google_play_publish.sh

deploy:
  provider: releases
  skip_cleanup: true
  api_key: $github_api_key
  file_glob: true
  file: app/build/outputs/apk/release/*.apk
  on:
    all_branches: true

after_success:
  - bash <(curl -s https://codecov.io/bash)
  - ./scripts/comment_pull_request_on_success.sh
  - ./scripts/telegram_notify_on_pull_request.sh

after_failure:
  - ./scripts/comment_pull_request_on_failure.sh
